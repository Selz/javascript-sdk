{"version":3,"file":"scripts.es5.js","sources":["docs/scripts.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const output = document.getElementById('output');\n\n    function log(label, json) {\n        const details = document.createElement('details');\n\n        const summary = document.createElement('summary');\n        summary.innerHTML = label;\n        details.appendChild(summary);\n\n        const contents = document.createElement('div');\n        const pre = document.createElement('pre');\n        pre.classList.add('prettyprint');\n        pre.innerHTML = JSON.stringify(json, null, 4);\n        contents.appendChild(pre);\n        details.appendChild(contents);\n\n        output.appendChild(details);\n\n        window.prettyPrint();\n    }\n\n    function fail(label, errors) {\n        return log(`${label} (Error)`, errors);\n    }\n\n    const storage = {\n        get key() {\n            return 'carts';\n        },\n        get(currency) {\n            let store = window.localStorage.getItem(this.key);\n\n            if (store === null) {\n                if (typeof currency !== 'string' || !currency.length) {\n                    return {};\n                }\n\n                return {};\n            }\n\n            store = JSON.parse(store);\n\n            if (typeof currency !== 'string') {\n                return store;\n            }\n\n            const key = currency.toLowerCase();\n\n            if (key in store) {\n                return store[key];\n            }\n\n            return {};\n        },\n        set(currency, id) {\n            const store = storage.get();\n            const key = currency.toLowerCase();\n            store[key] = id;\n            window.localStorage.setItem(this.key, JSON.stringify(store));\n        },\n        remove(currency) {\n            const store = storage.get();\n            delete store[currency.toLowerCase()];\n            window.localStorage.setItem(this.key, JSON.stringify(store));\n        },\n    };\n\n    const client = new SelzClient({\n        id: 13,\n        env: 'local',\n        colors: { buttons: { background: '#303e4c', text: '#97e66a' }, checkout: { background: '#303e4c', text: '#97e66a' } },\n    });\n\n    log('Config', client.config);\n\n    // Listen for messages\n    // window.addEventListener('message', event => console.warn(event), false);\n\n    function getCart(product) {\n        const id = storage.get(product.currency_code);\n\n        return new Promise((resolve, reject) => {\n            if (typeof id === 'string' && id.length) {\n                client\n                    .getCart(id)\n                    .then(cart => {\n                        log('Existing cart', cart);\n                        resolve(cart);\n                    })\n                    .catch(error => reject(error));\n            } else {\n                client\n                    .createCart(product.currency_code)\n                    .then(cart => {\n                        storage.set(product.currency_code, cart.id);\n                        resolve(cart);\n                    })\n                    .catch(error => reject(error));\n            }\n        });\n    }\n\n    function addToCart(product) {\n        getCart(product)\n            .then(cart => {\n                cart\n                    .add({\n                        id: product.id,\n                        variant_id: product.variants[0].id,\n                    })\n                    .then(updatedCart => {\n                        log('Added', updatedCart);\n                        updatedCart.checkout();\n                    })\n                    .catch(error => fail('Added', error));\n            })\n            .catch(error => fail('Get cart', error));\n    }\n\n    client\n        .getProduct('http://selz.co/1rvbhT6')\n        .then(product => {\n            log('Product', product);\n\n            addToCart(product);\n\n            // product.buy();\n            // product.view();\n        })\n        .catch(errors => fail('Product', errors));\n\n    window.client = client;\n});\n"],"names":["document","addEventListener","log","label","json","details","createElement","summary","innerHTML","appendChild","contents","pre","classList","add","JSON","stringify","prettyPrint","fail","errors","addToCart","product","id","storage","get","currency_code","Promise","resolve","reject","length","getCart","then","cart","catch","error","createCart","set","variants","updatedCart","checkout","output","getElementById","currency","store","window","localStorage","getItem","this","key","parse","toLowerCase","setItem","client","SelzClient","buttons","background","text","config","getProduct"],"mappings":"AAAAA,SAASC,iBAAiB,mBAAoB,oBAGjCC,EAAIC,EAAOC,OACVC,EAAUL,SAASM,cAAc,WAEjCC,EAAUP,SAASM,cAAc,aAC/BE,UAAYL,IACZM,YAAYF,OAEdG,EAAWV,SAASM,cAAc,OAClCK,EAAMX,SAASM,cAAc,SAC/BM,UAAUC,IAAI,iBACdL,UAAYM,KAAKC,UAAUX,EAAM,KAAM,KAClCK,YAAYE,KACbF,YAAYC,KAEbD,YAAYJ,UAEZW,uBAGFC,EAAKd,EAAOe,UACVhB,EAAOC,aAAiBe,YAgF1BC,EAAUC,aAxBFA,OACPC,EAAKC,EAAQC,IAAIH,EAAQI,sBAExB,IAAIC,QAAQ,SAACC,EAASC,GACP,iBAAPN,GAAmBA,EAAGO,SAExBC,QAAQR,GACRS,KAAK,cACE,gBAAiBC,KACbA,KAEXC,MAAM,mBAASL,EAAOM,OAGtBC,WAAWd,EAAQI,eACnBM,KAAK,cACMK,IAAIf,EAAQI,cAAeO,EAAKV,MAChCU,KAEXC,MAAM,mBAASL,EAAOM,SAM3Bb,GACHU,KAAK,cAEGjB,QACOO,EAAQC,cACAD,EAAQgB,SAAS,GAAGf,KAEnCS,KAAK,cACE,QAASO,KACDC,aAEfN,MAAM,mBAASf,EAAK,QAASgB,OAErCD,MAAM,mBAASf,EAAK,WAAYgB,SApHnCM,EAASvC,SAASwC,eAAe,UAyBjClB,mBAES,sBAEPmB,OACIC,EAAQC,OAAOC,aAAaC,QAAQC,KAAKC,QAE/B,OAAVL,QACwB,iBAAbD,GAA0BA,EAASb,eAO1Cd,KAAKkC,MAAMN,GAEK,iBAAbD,SACAC,MAGLK,EAAMN,EAASQ,qBAEjBF,KAAOL,EACAA,EAAMK,oBAKjBN,EAAUpB,OACJqB,EAAQpB,EAAQC,QACVkB,EAASQ,eACR5B,SACNuB,aAAaM,QAAQJ,KAAKC,IAAKjC,KAAKC,UAAU2B,qBAElDD,OACGC,EAAQpB,EAAQC,aACfmB,EAAMD,EAASQ,sBACfL,aAAaM,QAAQJ,KAAKC,IAAKjC,KAAKC,UAAU2B,MAIvDS,EAAS,IAAIC,eACX,OACC,gBACKC,SAAWC,WAAY,UAAWC,KAAM,WAAajB,UAAYgB,WAAY,UAAWC,KAAM,gBAGxG,SAAUJ,EAAOK,UA+ChBC,WAAW,0BACX3B,KAAK,cACE,UAAWV,KAELA,KAKbY,MAAM,mBAAUf,EAAK,UAAWC,YAE9BiC,OAASA"}